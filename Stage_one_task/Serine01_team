##Task one...
# RNA Codon Table for Translation
codon_table = {
    'CAC': 'H', 'CAU': 'H', 'CAA': 'Q', 'CAG': 'Q',
    'CGA': 'R', 'CGC': 'R', 'CGG': 'R', 'CGU': 'R',
    'GUA': 'V', 'GUC': 'V', 'GUG': 'V', 'GUU': 'V',
    'GCA': 'A', 'GCC': 'A', 'GCG': 'A', 'GCU': 'A',
    'UUC': 'F', 'UUU': 'F', 'UUA': 'L', 'UUG': 'L',
    'UAC': 'Y', 'UAU': 'Y', 'UAA': '', 'UAG': ''
}
#A= Alanine, R= Arginine, H = Histidine, V =Valine, F = Phenylalanine, L = Leucine, Q = Glutamine, '' = stop codon
#Function to translate an DNA sequence into a protein sequence. 
def dna_to_protein(dna_sequence):
    #Transcribing the dna sequence
    transcription_rules = {'A': 'U', 'T': 'A', 'G': 'C', 'C': 'G'} #the values are RNA nucleotides
    mrna_sequence = ''.join([transcription_rules[base] for base in dna_sequence])
    
    #Translating the mrna sequence to protein
    protein = []  #Initializing the empty protein list
    # Split into codons (triplets)
    for i in range(0, len(mrna_sequence), 3):
        codon = mrna_sequence[i:i+3]  # Extract codon
        #Translate codons into AA
        if codon in codon_table:
            amino_acid = codon_table[codon]
         # Stop translation if stop codon is found
            if amino_acid == '':  
                break
            #Append the AA to the protein list
            protein.append(amino_acid)
    return ''.join(protein)

#Call the function
protein  = dna_to_protein("ATGCGTAAG")
print(protein)


###Task2
